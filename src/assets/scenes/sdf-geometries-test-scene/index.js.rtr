
const startPos = -50;

scene({
    rendererSettings: {
        realtimeHitDepth: 2,
        hitDepth: 8,
        tMax: 5000,
        maxSphereTracingSteps: 255,
        resolution: 0.4
    },
    camera: {
        lookFrom: {x: -19.685, y: 34.419, z: 79.733},
        lookAt: {x: -19.666, y: 33.026, z: 75.434},
        vfov: 45,
        aperture: 1e-8,
        velocity: 1
    },
    background: '#010101',
    geometries: [
        sdf(
            sdfCylinder({
                radius: 5,
                height: 5,
                position: {x: startPos, y: 10, z: 0},
                // rotation: { x: degToRad(45) },
                material: 'clearcoat-test',
                // texture: {
                //     name: 'check',
                //     uvScale: 2
                // },
            })
        ),
        sdf(
            sdfSphere({
                material: `lambert-red`,
                radius: 5,
                position: {x: startPos + 20, y: 10, z: 0},
            })
        ),
        sdf(
            sdfBox({
                material: 'clearcoat-test',
                dimensions: {x: 5, y: 5, z: 5},
                position: {x: startPos + 40, y: 10, z: 0},
                // texture: {
                //     name: 'check',
                //     uvScale: 2
                // }
            }),
        ),
        sdf(
            sdfTorus({
                material: 'lambert-red',
                // dimensions: {x: 5, y: 5, z: 5},
                innerRadius: 2.5,
                outerRadius: 5,
                position: {x: startPos + 60, y: 10, z: 0},
                texture: {
                    name: 'check',
                    uvScale: 20
                }
            }),
        ),
        plane({
            material: 'floor-white',
            texture: {
                name: 'check',
                uvScale: 20
            },
            scale: 1000,
            position: {
                x: 0,
                y: 0,
                z: 0
            },
        }),
        plane({
            material: 'ceil-light',
            scale: 30,
            position: {
                x: 50,
                y: 80.0,
                z: 0
            },
        }),
        plane({
            material: 'ceil-light',
            scale: 30,
            position: {
                x: -50,
                y: 80.0,
                z: 0
            },
        })
    ],
    // displacements: {
    //     // displacement(
    //     //     name: 'sinus-displacement',
    //     //     src: `
    //     //         d = sin(20*p.x)*sin(20*p.y)*sin(20*p.z)
    //     //     `
    //     // )
    // },
    textures: [
        texture({
            name: 'check',
            src: `
                float s = sin(50.*uv.x)*sin(50.*uv.y);
                if(s < 0.) {
                    tColor = vec4(${normedColorStr('#aaaaaa')}, 1.0);
                } else {
                    tColor = vec4(0.3, 0.0, 0.0, 1.);
                }
            `
        })
    ],
    materials: [
        lambertMaterial({
            name: `floor-white`,
            color: '#ffffff',
            albedo: [0.8, 0.8, 0.8]
        }),
        lambertMaterial({
            name: `lambert-red`,
            color: '#ff0000',
            albedo: [0.8, 0.8, 0.8]
        }),
        // clearcoatMaterial({
        //     name: 'lambert-red',
        //     color: '#ff0000',
        //     // color: '#101010',
        //     refIdx: 1.8,
        // }),
        emissiveMaterial({
            name: `ceil-light`,
            color: '#ffffff',
            intensity: 10
        }),
        dialectricMaterial({
            name: 'dialectric-test',
            // color: '#cccccc',
            color: '#ffffff',
            refIdx: 1.8,
        }),
        clearcoatMaterial({
            name: 'clearcoat-test',
            // color: '#ffffff',
            color: '#101010',
            refIdx: 1.8,
        }),
        metalMaterial({
            name: 'metal-fuzz-test',
            color: '#aaaaaa',
            fuzz: 0.1,
            albedo: [1.0, 1.0, 1.0]
        }),
    ]
});
